class Node:
    def init(self, a=0, b=0):
        self.a = a
        self.b = b
        self.next = None

class peyvand_list:
    def init(self):
        self.head = None

    def append(self, a, b):
        new_node = Node(a, b)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

    def display(self):
        current = self.head
        while current:
            print(f"{current.a}x^{current.b}", end=" ")
            current = current.next
            if current:
                print("+", end=" ")
        print()

class Polynomial:
    def init(self):
        self.terms = peyvand_list()

    def add_term(self, a, b):
        self.terms.append(a, b)

    def display(self):
        self.terms.display()

polynomial = Polynomial()
polynomial.add_term(3, 2)
polynomial.add_term(-1, 1)
polynomial.add_term(5, 0)

polynomial.display()
